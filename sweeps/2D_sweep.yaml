program: icl_ebm_train.py
project: icl-ebm
method: grid
metric:
  goal: minimize
  name: total_loss
parameters:
  accumulate_grad_batches:
    values: [
      2,
    ]
  batch_size_train:
    values: [12]
  batch_size_val:
    values: [1]
  check_val_every_n_epoch:
    values: [5]
  compile_model:
    values: [False]
  dataset_kwargs:
    parameters:
      dataset:
        values: [
          "linear_regression",
        ]
      max_n_samples_in_context:
        values: [ 40 ]
      n_dimensions:
        values: [2]
      n_samples_per_dataset:
        values: [1000]
      n_unique_datasets:
        values: [10, 361, float("inf")]
      w_prior:
        values: ["isotropic_gaussian"]
      w_prior_kwargs:
        parameters:
          mean:
            values: [0.0]
          std_dev:
            values: [5.0]
      x_prior:
        values: [ "uniform" ]
      x_prior_kwargs:
        parameters:
          low:
            values: [ -15.0 ]
          high:
            values: [ 15.0 ]
      noise_prior:
        values: [ "isotropic_gaussian" ]
      noise_prior_kwargs:
        parameters:
          mean:
            values: [ 0.0 ]
          std_dev:
            values: [0.1, 5.0, 10. ]
  energy_regularization:
    values: [1e-3]

  eval_datasets:
    parameters:
      standard_eval_dataset_kwargs:
        parameters:
          dataset:
            values: [
              "linear_regression",
            ]
          max_n_samples_in_context:
            values: [ 40 ]
          n_dimensions:
            values: [2]
          n_samples_per_dataset:
            values: [1000]
          n_unique_datasets:
            values: [10, 361, float("inf")]
          w_prior:
            values: ["isotropic_gaussian"]
          w_prior_kwargs:
            parameters:
              mean:
                values: [0.0]
              std_dev:
                values: [10.0]
          x_prior:
            values: [ "uniform" ]
          x_prior_kwargs:
            parameters:
              low:
                values: [ -10.0 ]
              high:
                values: [ 10.0 ]
          noise_prior:
            values: [ "isotropic_gaussian" ]
          noise_prior_kwargs:
            parameters:
              mean:
                values: [ 0.0 ]
              std_dev:
                values: [0.1, 5.0, 10. ]
  eval_kwargs:
    parameters:
      n_meshgrid_points_in_1D_slice:
        values: [ 35 ]
  gradient_clip_val:
    values: [0.1]
  learning_rate:
    values: [0.001]
  learning_rate_scheduler:
    values: ["None"]
  log_every_n_steps:
    values: [1]
  mcmc_kwargs:
    parameters:
      algorithm:
        values: ["langevin_mcmc"]
      all_steps:
        values: [False]
      n_mcmc_steps:
        values: [15]
      step_size:
        values: [1.0]
      gradient_clip_val:
        values: [10., 1.0 , 0.5]
      kl_coeff:
        values: [0.0]
      ratio_of_confabulated_samples_to_real_samples:
        values: [3, 10, 30]
      replay_buffer:
        values: [False]
      replay_buffer_size:
        values: [10000]
      resampling_rate:
        values: [0.001]
      noise_scale:
        values: [10., 2.0, 0.1]
  model_kwargs:
    parameters:
      activation:
        values: ["gelu"]
      d_model:
        values: [128]
      dropout:
        values: [0.0]
      n_heads:
        values: [8]
      n_layers:
        values: [6]
  n_batches_per_epoch:
    values: [15]
  n_epochs:
    values: [20]
  optimizer:
    values: ["adam"]
  precision:
    values: ["bf16-mixed"]
  seed:
    values: [0, 1, 2]
  weight_decay:
    values: [1e-5]